<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.insta.comm.mapper.IPostMapper">

	<!-- 글 추가 -->
	<insert id="insertPost">
		insert into post(post_num, board_num, user_id, post_content)
		values (#{post_num}, #{board_num}, #{user_id}, #{post_content})
	</insert>
	
	<!-- 파일 추가 -->
	<insert id="insertFile">
		insert into files(file_num, file_path, post_num, save_file_name, original_file_name)
		values (#{file_num}, #{file_path}, #{post_num}, #{save_file_name}, #{original_file_name})
	</insert>
	
	<!-- 글 번호 최댓값 -->
	<select id="getMaxPostNo" resultType="String">
		select ifnull((select concat('P', lpad(substr(max(post_num), 2, 8) + 1, 7, '0')) from post), 'P0000001') as maxPostNo from dual
	</select>
  
  	<!-- 파일 번호 최댓값 -->
	<select id="getMaxFileNo" resultType="String">
		select ifnull((select concat('F', lpad(substr(max(file_num), 2, 8) + 1, 3, '0')) from files where post_num = #{post_num}), 'F001') as maxPostNo from dual
	</select>
  	
  	<!-- 모든 사용자가 등록한 글 리스트 -->
	<select id="boardList" resultType="com.insta.comm.mapper.PostShowFile">
		select 
			concat(files.file_path, files.save_file_name) as file_path, 
			files.save_file_name, 
			files.original_file_name, 
			post.post_num as post_num 
		from post 
		join files on post.post_num = files.post_num
		where post.board_num = 'B0000001'
			and files.file_num = 'F001'
			and post.is_used = 'Y'
			order by post_num desc
	</select>
	
	<!-- 글 상세보기 -->
	<select id="detailViewPopup" resultType="com.insta.comm.mapper.PostPopupDto">
	    select 
	    	post_num, 
	    	post_content, 
	    	post.post_like_cnt, 
	    	user_id
		from post 		
		where post.board_num = 'B0000001' 
			and post.post_num = #{post_num}
	</select>	
	
	<!-- 추가한 파일 경로 가져오기 -->
	<select id="getFileList" resultType="com.insta.comm.mapper.PostDto">
		select 
			file_path, 
			save_file_name, 
			original_file_name, 
			post_num, 
			file_num from files 
        where post_num = #{post_num}
	</select>

  	<!--삭제시(수정시) 파일 테이블 삭제-->
	<delete id="deleteFiles">
		delete from files where post_num= #{post_num}
	</delete>
	  
	 <!--삭제 시 포스트 테이블 사용여부 업데이트-->
	<update id="deletePost">
		update post set is_used = "N" where post_num = #{post_num}
	</update>
	
	<!-- 수정 시 포스트 테이블 업데이트 -->
	<update id="updatePost">
		update post
		set post_content=#{post_content},
		update_date=sysdate() 
		where post_num = #{post_num}
	</update> 
	
	<!-- 좋아요 게시물 등록 -->
	<insert id="addLike">
		insert into tb_like(post_num, user_id)
		values(#{post_num}, #{user_id})
	</insert>
	
	<!-- 좋아요 게시물 삭제 -->
	<delete id="delLike">
		delete from tb_like
		where post_num = #{post_num}
		and user_id = #{user_id}
	</delete>
	
	<!-- 좋아요 눌렀을 때 카운트 증가 -->
	<update id="updatePostLikePlus">
		update post
			set post_like_cnt = post_like_cnt + 1
		where post_num = #{post_num}
	</update>
	
	<!-- 좋아요 눌렀을 때 카운트 감소 -->
	<update id="updatePostLikeMinus">
		update post
			set post_like_cnt = post_like_cnt - 1
		where post_num = #{post_num}
	</update>
	
	<!-- 좋아요 게시물 확인 -->
	<select id="isLikePost" resultType="_int">
		select count(*)
		from tb_like
		where user_id = #{user_id}
		and post_num = #{post_num}
	</select>
	
	<!-- 글 수정 화면 -->
	<select id="postModifyView" resultType="com.insta.comm.mapper.PostDto">
		select 
			p.post_num, p.post_content, 
			concat(f.file_path, f.save_file_name) as file_path
		from post as p
		join files as f on p.post_num = f.post_num
			where p.post_num = #{post_num}
	</select>
	<!-- <select id="test" resultType="com.insta.comm.mapper.PostPopupDto">
		<selectKey keyProperty="msgVersion" resultType="java.lang.Integer" order="AFTER">
            SELECT SID_INCIDENT_REV AS msgVersion 
              FROM BITBUSSTOPINFODEVICE 
             WHERE SID_NO = #{inciMsgLocation}
          </selectKey>
		select files.file_path as file_path, post.post_num as post_num, post.post_content
		from post 
		join files on post.post_num = files.post_num
		where post.board_num = 'B0000001' 
		and post.post_num = #{post_num}
		<where>
			<if test="">
				and dfdf
			</if>
			<foreach collection=""></foreach>
		</where>
	</select> -->
</mapper>
 